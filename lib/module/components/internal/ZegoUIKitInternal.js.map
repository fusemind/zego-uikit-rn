{"version":3,"names":["ZegoExpressEngine","zlogerror","zloginfo","zlogwarning","ZegoAudioVideoResourceMode","ZegoChangedCountOrProperty","ZegoRoomPropertyUpdateType","_appInfo","appID","appSign","_isRoomConnected","_currentRoomState","_currentRoomID","_audioOutputType","_usingFrontFacingCamera","_onMicDeviceOnCallbackMap","_onCameraDeviceOnCallbackMap","_onRoomStateChangedCallbackMap","_onRequireNewTokenCallbackMap","_onUserJoinCallbackMap","_onUserLeaveCallbackMap","_onUserInfoUpdateCallbackMap","_onSoundLevelUpdateCallbackMap","_onSDKConnectedCallbackMap","_onAudioOutputDeviceTypeChangeCallbackMap","_onOnlySelfInRoomCallbackMap","_onUserCountOrPropertyChangedCallbackMap","_onAudioVideoAvailableCallbackMap","_onAudioVideoUnavailableCallbackMap","_onInRoomMessageReceivedCallbackMap","_onInRoomMessageSentCallbackMap","_onRoomPropertyUpdatedCallbackMap","_onRoomPropertiesFullUpdatedCallbackMap","_onInRoomCommandReceivedCallbackMap","_onMeRemovedFromRoomCallbackMap","_onTurnOnYourCameraRequestCallbackMap","_onTurnOnYourMicrophoneRequestCallbackMap","_onMemberListForceSortCallbackMap","_onAudioVideoListForceSortCallbackMap","_localCoreUser","_createCoreUser","_streamCoreUserMap","_coreUserMap","_qualityUpdateLogCounter","_inRoomMessageList","_audioVideoResourceMode","Default","_roomProperties","_isLargeRoom","_roomMemberCount","_markAsLargeRoom","_resetData","_resetDataForLeavingRoom","userID","userName","profileUrl","extendInfo","_createPublicUser","coreUser","isMicrophoneOn","isMicDeviceOn","isCameraOn","isCameraDeviceOn","soundLevel","inRoomAttributes","viewID","viewFillMode","streamID","publisherQuality","joinTime","_isLocalUser","undefined","_setLocalUserInfo","userInfo","_onRoomUserUpdate","roomID","updateType","userList","userInfoList","length","forEach","user","_getStreamIDByUserID","Date","now","_notifyUserInfoUpdate","push","_tryStartPlayStream","_notifyUserCountOrPropertyChanged","userAdd","Object","keys","callbackID","_tryStopPlayStream","userDelete","_onRoomStreamUpdate","streamList","users","stream","cameraStateUpdate","_onRemoteCameraStateUpdate","isOn","console","warn","_onAudioRouteChange","type","_onRemoteMicStateUpdate","microphoneStateUpdate","_onRoomStateChanged","reason","errorCode","extendedData","_tryStartPublishStream","_notifyMeRemovedFromRoom","_onInRoomMessageReceived","messageList","messages","msg","message","messageID","sendTime","sender","fromUser","_onRequireNewToken","token","instance","renewToken","then","catch","error","_onRoomExtraInfoUpdate","roomExtraInfoList","updateKeys","oldRoomProperties","JSON","parse","stringify","key","updateTime","updateUser","value","roomProperties","propertyKey","_notifyRoomPropertyUpdate","remote","_notifyRoomPropertiesFullUpdate","_onIMCustomCommandReceived","command","commandObj","removeUserIDList","zego_remove_user","turnCameraOnUserID","zego_turn_camera_on","turnCameraOffUserID","zego_turn_camera_off","turnMicrophoneOnUserID","zego_turn_microphone_on","turnMicrophoneOffUserID","zego_turn_microphone_off","find","removeUserID","_leaveRoom","_turnCameraDeviceOn","_turnMicDeviceOn","_sendInRoomCommand","toUserList","Promise","reject","resolve","sendCustomCommand","logoutRoom","stopSoundLevelMonitor","on","muteMicrophone","extraInfo","setStreamExtraInfo","_tryStopPublishStream","isLargeRoom","enableCamera","_registerEngineCallback","quality","split","state","_getUserIDByStreamID","soundLevels","_notifySoundLevelUpdate","audioRoute","remainTimeInSecond","_unregisterEngineCallback","off","values","sort","user1","user2","map","_getPublishStreamID","startPublishingStream","startPreview","reactTag","viewMode","fillMode","backgroundColor","force","stopPublishingStream","stopPreview","startPlayingStream","resourceMode","stopPlayingStream","oldValue","_isEngineCreated","isRoomConnected","setAudioVideoResourceMode","audioVideoResourceMode","updateRenderingProperty","onUserInfoUpdate","callback","onSoundLevelUpdate","onSDKConnected","connectSDK","setEngineConfig","advancedConfig","notify_remote_device_unknown_status","notify_remote_device_init_status","engineProfile","scenario","createEngineWithProfile","engine","disconnectSDK","destroyEngine","finally","useFrontFacingCamera","isFrontFacing","useFrontCamera","isUsingFrontFacingCamera","enableSpeaker","enable","muteSpeaker","audioOutputDeviceType","turnMicDeviceOn","turnCameraDeviceOn","onMicDeviceOn","onCameraDeviceOn","setAudioOutputToSpeaker","isSpeaker","setAudioRouteToSpeaker","onAudioOutputDeviceTypeChange","setAudioConfig","config","setVideoConfig","onAudioVideoAvailable","onAudioVideoUnavailable","startPlayingAllAudioVideo","muteAllPlayStreamAudio","muteAllPlayStreamVideo","stopPlayingAllAudioVideo","onTurnOnYourCameraRequest","onTurnOnYourMicrophoneRequest","joinRoom","markAsLargeRoom","isUserStatusNotify","loginRoom","startSoundLevelMonitor","leaveRoom","onRoomStateChanged","onRequireNewToken","setRoomProperty","setRoomExtraInfo","set","code","updateRoomProperties","newRoomProperties","updateKey","update","getRoomProperties","onRoomPropertyUpdated","onRoomPropertiesFullUpdated","sendInRoomCommand","toUserIDs","onInRoomCommandReceived","onMeRemovedFromRoom","connectUser","disconnectUser","getLocalUserInfo","getUser","getAllUsers","a","b","publicUsers","onUserJoin","onUserLeave","onOnlySelfInRoom","onUserCountOrPropertyChanged","removeUserFromRoom","userIDs","getInRoomMessages","sendInRoomMessage","sendBroadcastMessage","result","inRoomMessage","onInRoomMessageReceived","onInRoomMessageSent","notifyUserCountOrPropertyChanged","notifyUserInfoUpdate","forceSortMemberList","onMemberListForceSort","forceSortAudioVideoList","onAudioVideoListForceSort"],"sources":["ZegoUIKitInternal.js"],"sourcesContent":["import ZegoExpressEngine from 'zego-express-engine-reactnative';\nimport { zlogerror, zloginfo, zlogwarning } from '../../utils/logger';\nimport { ZegoAudioVideoResourceMode, ZegoChangedCountOrProperty, ZegoRoomPropertyUpdateType } from './defines'\n\nvar _appInfo = {\n  appID: 0,\n  appSign: '',\n};\nvar _isRoomConnected = false;\nvar _currentRoomState = 7; // Logout\nvar _currentRoomID = '';\nvar _audioOutputType = 0;\nvar _usingFrontFacingCamera = true;\n\nvar _onMicDeviceOnCallbackMap = {};\nvar _onCameraDeviceOnCallbackMap = {};\nvar _onRoomStateChangedCallbackMap = {};\nvar _onRequireNewTokenCallbackMap = {};\nvar _onUserJoinCallbackMap = {};\nvar _onUserLeaveCallbackMap = {};\nvar _onUserInfoUpdateCallbackMap = {};\nvar _onSoundLevelUpdateCallbackMap = {};\nvar _onSDKConnectedCallbackMap = {};\nvar _onAudioOutputDeviceTypeChangeCallbackMap = {};\nvar _onOnlySelfInRoomCallbackMap = {};\nvar _onUserCountOrPropertyChangedCallbackMap = {};\nvar _onAudioVideoAvailableCallbackMap = {};\nvar _onAudioVideoUnavailableCallbackMap = {};\nvar _onInRoomMessageReceivedCallbackMap = {};\nvar _onInRoomMessageSentCallbackMap = {};\nvar _onRoomPropertyUpdatedCallbackMap = {};\nvar _onRoomPropertiesFullUpdatedCallbackMap = {};\nvar _onInRoomCommandReceivedCallbackMap = {};\nvar _onMeRemovedFromRoomCallbackMap = {};\nvar _onTurnOnYourCameraRequestCallbackMap = {};\nvar _onTurnOnYourMicrophoneRequestCallbackMap = {};\n\n// Force update component callback\nvar _onMemberListForceSortCallbackMap = {};\nvar _onAudioVideoListForceSortCallbackMap = {};\n\nvar _localCoreUser = _createCoreUser('', '', '', {});\nvar _streamCoreUserMap = {}; // <streamID, CoreUser>\nvar _coreUserMap = {}; // <userID, CoreUser>\nvar _qualityUpdateLogCounter = 0;\n\nvar _inRoomMessageList = [];\nvar _audioVideoResourceMode = ZegoAudioVideoResourceMode.Default;\nvar _roomProperties = {};\nvar _isLargeRoom = false;\nvar _roomMemberCount = 0;\nvar _markAsLargeRoom = false;\n\nfunction _resetData() {\n  zloginfo('Reset all data.');\n  _appInfo = { appID: 0, appSign: '' };\n  _localCoreUser = _createCoreUser('', '', '', {});\n  _streamCoreUserMap = {};\n  _coreUserMap = {};\n  _currentRoomID = '';\n  _currentRoomState = 7;\n  _isRoomConnected = false;\n  _audioOutputType = 0;\n  _inRoomMessageList = [];\n  _audioVideoResourceMode = ZegoAudioVideoResourceMode.Default;\n  _isLargeRoom = false;\n  _roomMemberCount = 0;\n  _markAsLargeRoom = false;\n}\n\nfunction _resetDataForLeavingRoom() {\n  zloginfo('Reset data for leaving room.');\n  _streamCoreUserMap = {};\n  _coreUserMap = {};\n  _currentRoomID = '';\n  _currentRoomState = 7;\n  _isRoomConnected = false;\n  const { userID, userName, profileUrl, extendInfo } = _localCoreUser;\n  _localCoreUser = _createCoreUser(userID, userName, profileUrl, extendInfo);\n  _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n  _inRoomMessageList = [];\n  _roomProperties = {};\n  _isLargeRoom = false;\n  _roomMemberCount = 0;\n  _markAsLargeRoom = false;\n}\n\nfunction _createPublicUser(coreUser) {\n  return {\n    userID: coreUser.userID,\n    userName: coreUser.userName,\n    extendInfo: coreUser.extendInfo,\n    isMicrophoneOn: coreUser.isMicDeviceOn,\n    isCameraOn: coreUser.isCameraDeviceOn,\n    soundLevel: coreUser.soundLevel,\n    inRoomAttributes: coreUser.inRoomAttributes,\n  };\n}\nfunction _createCoreUser(userID, userName, profileUrl, extendInfo) {\n  return {\n    userID: userID,\n    userName: userName,\n    profileUrl: profileUrl,\n    extendInfo: extendInfo,\n    viewID: -1,\n    viewFillMode: 1,\n    streamID: '',\n    isMicDeviceOn: false,\n    isCameraDeviceOn: false,\n    publisherQuality: 0,\n    soundLevel: 0,\n    joinTime: 0,\n    inRoomAttributes: {},\n  };\n}\nfunction _isLocalUser(userID) {\n  return (\n    userID === undefined || userID === '' || _localCoreUser.userID === userID\n  );\n}\nfunction _setLocalUserInfo(userInfo) {\n  _localCoreUser = _createCoreUser(\n    userInfo.userID,\n    userInfo.userName,\n    userInfo.profileUrl,\n    userInfo.extendInfo\n  );\n  _coreUserMap[userInfo.userID] = _localCoreUser;\n}\n\nfunction _onRoomUserUpdate(roomID, updateType, userList) {\n  // No need for roomID, does not support multi-room right now.\n  const userInfoList = [];\n  if (updateType == 0) {\n    _roomMemberCount += userList.length;\n    if (_roomMemberCount >= 500) {\n      _isLargeRoom = true;\n    }\n    userList.forEach((user) => {\n      if (!(user.userID in _coreUserMap)) {\n        const coreUser = _createCoreUser(user.userID, user.userName);\n        _coreUserMap[user.userID] = coreUser;\n      }\n      const streamID = _getStreamIDByUserID(user.userID);\n      if (streamID in _streamCoreUserMap) {\n        _coreUserMap[user.userID].streamID = streamID;\n      }\n      _coreUserMap[user.userID].joinTime = Date.now();\n      _notifyUserInfoUpdate(_coreUserMap[user.userID]);\n\n      userInfoList.push(_createPublicUser(_coreUserMap[user.userID]));\n\n      // Start after user insert into list\n      _tryStartPlayStream(user.userID);\n    });\n    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n    zloginfo('User Join: ', userInfoList);\n    Object.keys(_onUserJoinCallbackMap).forEach((callbackID) => {\n      if (_onUserJoinCallbackMap[callbackID]) {\n        _onUserJoinCallbackMap[callbackID](userInfoList);\n      }\n    });\n  } else {\n    _roomMemberCount -= userList.length;\n    userList.forEach((user) => {\n      if (user.userID in _coreUserMap) {\n        const coreUser = _coreUserMap[user.userID];\n        const userInfo = {\n          userID: coreUser.userID,\n          userName: coreUser.userName,\n          profileUrl: coreUser.profileUrl,\n          extendInfo: coreUser.extendInfo,\n        };\n        userInfoList.push(userInfo);\n\n        // Stop play stream before remove user list\n        _tryStopPlayStream(coreUser.userID, true);\n        delete _coreUserMap[user.userID];\n      }\n    });\n    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n    zloginfo('User Leave: ', userInfoList);\n    Object.keys(_onUserLeaveCallbackMap).forEach((callbackID) => {\n      if (_onUserLeaveCallbackMap[callbackID]) {\n        _onUserLeaveCallbackMap[callbackID](userInfoList);\n      }\n    });\n    if (Object.keys(_coreUserMap).length <= 1) {\n      Object.keys(_onOnlySelfInRoomCallbackMap).forEach((callbackID) => {\n        if (_onOnlySelfInRoomCallbackMap[callbackID]) {\n          _onOnlySelfInRoomCallbackMap[callbackID]();\n        }\n      });\n    }\n  }\n}\nfunction _onRoomStreamUpdate(roomID, updateType, streamList) {\n  zloginfo('_onRoomStreamUpdate: ', roomID, updateType, streamList);\n  var users = [];\n  if (updateType == 0) {\n    // Add\n    streamList.forEach((stream) => {\n      const userID = stream.user.userID;\n      const userName = stream.user.userName;\n      const streamID = stream.streamID;\n      if (userID in _coreUserMap) {\n        _coreUserMap[userID].streamID = streamID;\n        _streamCoreUserMap[streamID] = _coreUserMap[userID];\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _tryStartPlayStream(userID);\n\n        users.push(_coreUserMap[userID]);\n      } else {\n        _streamCoreUserMap[streamID] = _createCoreUser(\n          userID,\n          userName,\n          '',\n          {}\n        );\n        _streamCoreUserMap[streamID].streamID = streamID;\n\n        _coreUserMap[userID] = _streamCoreUserMap[streamID];\n\n        users.push(_streamCoreUserMap[streamID]);\n      }\n    });\n\n    Object.keys(_onAudioVideoAvailableCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n        _onAudioVideoAvailableCallbackMap[callbackID](users);\n      }\n    });\n  } else {\n    streamList.forEach((stream) => {\n      const userID = stream.user.userID;\n      const streamID = stream.streamID;\n      if (userID in _coreUserMap) {\n        _tryStopPlayStream(userID, true);\n        _coreUserMap[userID].isCameraDeviceOn = false;\n        _coreUserMap[userID].isMicDeviceOn = false;\n        _coreUserMap[userID].streamID = '';\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n        users.push(_coreUserMap[userID]);\n\n        delete _streamCoreUserMap[streamID];\n      }\n    });\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.cameraStateUpdate\n    );\n\n    Object.keys(_onAudioVideoUnavailableCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n        _onAudioVideoUnavailableCallbackMap[callbackID](users);\n      }\n    });\n  }\n}\nfunction _onRemoteCameraStateUpdate(userID, isOn) {\n  console.warn('>>>>>>>>>>>>> _onRemoteCameraStateUpdate', userID, isOn);\n  if (userID in _coreUserMap) {\n    _coreUserMap[userID].isCameraDeviceOn = isOn;\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.cameraStateUpdate\n    );\n\n    Object.keys(_onCameraDeviceOnCallbackMap).forEach((callbackID) => {\n      if (_onCameraDeviceOnCallbackMap[callbackID]) {\n        _onCameraDeviceOnCallbackMap[callbackID](userID, isOn);\n      }\n    });\n\n    if (userID != _localCoreUser.userID) {\n      if (isOn) {\n        _tryStartPlayStream(userID);\n      }\n    }\n  }\n}\nfunction _onAudioRouteChange(type) {\n  Object.keys(_onAudioOutputDeviceTypeChangeCallbackMap).forEach(\n    (callbackID) => {\n      if (_onAudioOutputDeviceTypeChangeCallbackMap[callbackID]) {\n        _onAudioOutputDeviceTypeChangeCallbackMap[callbackID](type);\n      }\n    }\n  );\n  _audioOutputType = type;\n}\nfunction _onRemoteMicStateUpdate(userID, isOn) {\n  console.warn('>>>>>>>>>>>>> _onRemoteMicStateUpdate', userID, isOn);\n  if (userID in _coreUserMap) {\n    _coreUserMap[userID].isMicDeviceOn = isOn;\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n    _notifyUserCountOrPropertyChanged(\n      ZegoChangedCountOrProperty.microphoneStateUpdate\n    );\n\n    Object.keys(_onMicDeviceOnCallbackMap).forEach((callbackID) => {\n      if (_onMicDeviceOnCallbackMap[callbackID]) {\n        _onMicDeviceOnCallbackMap[callbackID](userID, isOn);\n      }\n    });\n\n    if (userID != _localCoreUser.userID) {\n      if (isOn) {\n        _tryStartPlayStream(userID);\n      }\n    }\n  }\n}\nfunction _onRoomStateChanged(roomID, reason, errorCode, extendedData) {\n  zloginfo('Room state chaged: ', roomID, reason, errorCode, extendedData);\n  // Not support multi-room right now\n  if (reason == 1 || reason == 4) {\n    // Logined || Reconnected\n    _isRoomConnected = true;\n    _tryStartPublishStream();\n  } else {\n    _isRoomConnected = false;\n    if (reason == 6) {\n      // KickOut\n      _notifyMeRemovedFromRoom();\n    }\n  }\n  _currentRoomState = reason;\n\n  Object.keys(_onRoomStateChangedCallbackMap).forEach((callbackID) => {\n    // callback may remove from map during room state chaging\n    if (callbackID in _onRoomStateChangedCallbackMap) {\n      if (_onRoomStateChangedCallbackMap[callbackID]) {\n        _onRoomStateChangedCallbackMap[callbackID](\n          reason,\n          errorCode,\n          extendedData\n        );\n      }\n    }\n  });\n}\nfunction _onInRoomMessageReceived(roomID, messageList) {\n  zloginfo('Received in room message: ', roomID, messageList.length);\n  var messages = [];\n  messageList.forEach((msg) => {\n    const message = {\n      message: msg.message,\n      messageID: msg.messageID,\n      sendTime: msg.sendTime,\n      sender: _createPublicUser(_coreUserMap[msg.fromUser.userID]),\n    };\n    messages.push(message);\n    _inRoomMessageList.push(message);\n  });\n\n  Object.keys(_onInRoomMessageReceivedCallbackMap).forEach((callbackID) => {\n    // callback may remove from map during room state chaging\n    if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n      if (_onInRoomMessageReceivedCallbackMap[callbackID]) {\n        _onInRoomMessageReceivedCallbackMap[callbackID](messages);\n      }\n    }\n  });\n}\nfunction _onRequireNewToken() {\n  Object.keys(_onRequireNewTokenCallbackMap).forEach((callbackID) => {\n    if (callbackID in _onRequireNewTokenCallbackMap) {\n      if (_onRequireNewTokenCallbackMap[callbackID]) {\n        const token = _onRequireNewTokenCallbackMap[callbackID]();\n        if (token) {\n          ZegoExpressEngine.instance()\n            .renewToken(_currentRoomID, token)\n            .then(() => {\n              zloginfo('Renew token success');\n            })\n            .catch((error) => {\n              zlogerror('Renew token failed: ', error);\n            });\n        } else {\n          zlogerror('Renew token failed: the returned token is abnormal');\n        }\n      }\n    }\n  });\n}\nfunction _onRoomExtraInfoUpdate(roomID, roomExtraInfoList) {\n  zloginfo('$$$$$$$$Room extra info update: ', roomID, roomExtraInfoList);\n  const updateKeys = [];\n  const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n  roomExtraInfoList.forEach(({ key, updateTime, updateUser, value }) => {\n    if (key === 'extra_info') {\n      const roomProperties = JSON.parse(value);\n      Object.keys(roomProperties).forEach((propertyKey) => {\n        if (oldRoomProperties[propertyKey] !== roomProperties[propertyKey]) {\n          updateKeys.push(propertyKey);\n          _roomProperties[propertyKey] = roomProperties[propertyKey];\n          _notifyRoomPropertyUpdate(propertyKey, oldRoomProperties[propertyKey], roomProperties[propertyKey], ZegoRoomPropertyUpdateType.remote);\n        }\n      })\n    }\n  });\n  if (updateKeys.length > 0) {\n    _notifyRoomPropertiesFullUpdate(updateKeys, oldRoomProperties, JSON.parse(JSON.stringify(_roomProperties)), ZegoRoomPropertyUpdateType.remote);\n  }\n}\nfunction _onIMCustomCommandReceived(roomID, fromUser, command) {\n  try {\n    const commandObj = JSON.parse(command);\n    if (commandObj && typeof commandObj === 'object') {\n      fromUser = _createPublicUser(_coreUserMap[fromUser.userID] || fromUser);\n      const removeUserIDList = commandObj.zego_remove_user;\n      const turnCameraOnUserID = commandObj.zego_turn_camera_on;\n      const turnCameraOffUserID = commandObj.zego_turn_camera_off;\n      const turnMicrophoneOnUserID = commandObj.zego_turn_microphone_on;\n      const turnMicrophoneOffUserID = commandObj.zego_turn_microphone_off;\n      if (removeUserIDList && removeUserIDList.find((removeUserID) => removeUserID === _localCoreUser.userID)) {\n        _notifyMeRemovedFromRoom();\n        // Leave the room automatically\n        _leaveRoom();\n      } else if (turnCameraOnUserID === _localCoreUser.userID) {\n        Object.keys(_onTurnOnYourCameraRequestCallbackMap).forEach((callbackID) => {\n          if (_onTurnOnYourCameraRequestCallbackMap[callbackID]) {\n            _onTurnOnYourCameraRequestCallbackMap[callbackID](fromUser);\n          }\n        });\n      } else if (turnMicrophoneOnUserID === _localCoreUser.userID) {\n        Object.keys(_onTurnOnYourMicrophoneRequestCallbackMap).forEach((callbackID) => {\n          if (_onTurnOnYourMicrophoneRequestCallbackMap[callbackID]) {\n            _onTurnOnYourMicrophoneRequestCallbackMap[callbackID](fromUser);\n          }\n        });\n      } else if (turnCameraOffUserID === _localCoreUser.userID) {\n        _turnCameraDeviceOn(_localCoreUser.userID, false);\n        // Automatic shutdown\n      } else if (turnMicrophoneOffUserID === _localCoreUser.userID) {\n        // Automatic shutdown\n        _turnMicDeviceOn(_localCoreUser.userID, false);\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  zloginfo('_onIMCustomCommandReceived: ', roomID, fromUser, command);\n  Object.keys(_onInRoomCommandReceivedCallbackMap).forEach((callbackID) => {\n    if (callbackID in _onInRoomCommandReceivedCallbackMap) {\n      if (_onInRoomCommandReceivedCallbackMap[callbackID]) {\n        _onInRoomCommandReceivedCallbackMap[callbackID](fromUser, command);\n      }\n    }\n  });\n}\nfunction _sendInRoomCommand(command, toUserList) {\n  if (!_isRoomConnected) {\n    zlogerror('You need to join the room before using this interface!');\n    return Promise.reject();\n  }\n  return new Promise((resolve, reject) => {\n    ZegoExpressEngine.instance().sendCustomCommand(_currentRoomID, command, toUserList).then(({ errorCode }) => {\n      if (errorCode === 0) {\n        zloginfo('[sendInRoomCommand]Send successfully', toUserList);\n        resolve();\n      } else {\n        zloginfo('[sendInRoomCommand]Send failure', toUserList);\n        reject();\n      }\n    }).catch((error) => {\n      zloginfo('[sendInRoomCommand]Send error', error);\n      reject();\n    })\n  });\n}\nfunction _leaveRoom() {\n  return new Promise((resolve, reject) => {\n    if (_currentRoomID == '') {\n      zlogwarning('You are not join in any room, no need to leave room.');\n      resolve();\n    } else {\n      zloginfo('leaveRoom: ', _currentRoomID);\n      ZegoExpressEngine.instance()\n        .logoutRoom(_currentRoomID)\n        .then(() => {\n          zloginfo('Leave room succeed.');\n          ZegoExpressEngine.instance().stopSoundLevelMonitor();\n          _notifyUserCountOrPropertyChanged(\n            ZegoChangedCountOrProperty.userDelete\n          );\n          _resetDataForLeavingRoom();\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Leave room failed: ', error);\n          reject(error);\n        });\n    }\n  });\n}\nfunction _turnMicDeviceOn(userID, on) {\n  return new Promise((resolve, reject) => {\n    if (_isLocalUser(userID)) {\n      zloginfo('turnMicDeviceOn: ', _localCoreUser.userID, on);\n      ZegoExpressEngine.instance().muteMicrophone(!on);\n\n      _onRemoteMicStateUpdate(_localCoreUser.userID, on);\n\n      _localCoreUser.isMicDeviceOn = on;\n      _coreUserMap[_localCoreUser.userID].isMicDeviceOn = on;\n      _notifyUserInfoUpdate(_localCoreUser);\n      _notifyUserCountOrPropertyChanged(\n        ZegoChangedCountOrProperty.microphoneStateUpdate\n      );\n\n      // sync device status via stream extra info\n      var extraInfo = {\n          isCameraOn : _localCoreUser.isCameraDeviceOn,\n          isMicrophoneOn : on\n      }\n      ZegoExpressEngine.instance().setStreamExtraInfo(JSON.stringify(extraInfo))\n\n      if (on) {\n        _tryStartPublishStream();\n      } else {\n        _tryStopPublishStream();\n      }\n      resolve();\n    } else {\n      const isLargeRoom = _isLargeRoom || _markAsLargeRoom;\n      const command = on ? JSON.stringify({ zego_turn_microphone_on: userID }) : JSON.stringify({ zego_turn_microphone_off: userID });\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      const toUserList = isLargeRoom ? [] : [{ userID, userName }];\n      _sendInRoomCommand(command, toUserList).then(() => {\n        zloginfo('turnMicDeviceOn others: ', userID, on);\n        resolve();\n      }).catch(() => {\n        zlogerror('turnMicDeviceOn others error: ', userID, on);\n        reject();\n      });\n    }\n  });\n}\nfunction _turnCameraDeviceOn(userID, on) {\n  return new Promise((resolve, reject) => {\n    if (_isLocalUser(userID)) {\n      // Default to Main Channel\n      zloginfo('turnCameraDeviceOn: ', _localCoreUser.userID, on);\n      ZegoExpressEngine.instance().enableCamera(on, 0);\n\n      _onRemoteCameraStateUpdate(_localCoreUser.userID, on);\n\n      _localCoreUser.isCameraDeviceOn = on;\n      // if (!on) {\n      //     _localCoreUser.viewID = -1;\n      // }\n      _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n      _notifyUserInfoUpdate(_localCoreUser);\n      _notifyUserCountOrPropertyChanged(\n        ZegoChangedCountOrProperty.cameraStateUpdate\n      );\n\n      // sync device status via stream extra info\n      var extraInfo = {\n          isCameraOn : on,\n          isMicrophoneOn : _localCoreUser.isMicDeviceOn\n      }\n      ZegoExpressEngine.instance().setStreamExtraInfo(JSON.stringify(extraInfo))\n\n      if (on) {\n        _tryStartPublishStream();\n      } else {\n        _tryStopPublishStream();\n      }\n      resolve();\n    } else {\n      const isLargeRoom = _isLargeRoom || _markAsLargeRoom;\n      const command = on ? JSON.stringify({ zego_turn_camera_on: userID }) : JSON.stringify({ zego_turn_camera_off: userID });\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      const toUserList = isLargeRoom ? [] : [{ userID, userName }];\n      _sendInRoomCommand(command, toUserList).then(() => {\n        zloginfo('turnCameraDeviceOn others: ', userID, on);\n        resolve();\n      }).catch(() => {\n        zlogerror('turnCameraDeviceOn others error: ', userID, on);\n        reject();\n      });\n    }\n  });\n}\nfunction _registerEngineCallback() {\n  zloginfo('Register callback for ZegoExpressEngine...');\n  ZegoExpressEngine.instance().on(\n    'roomUserUpdate',\n    (roomID, updateType, userList) => {\n      zloginfo('[roomUserUpdate callback]', roomID, updateType, userList);\n      _onRoomUserUpdate(roomID, updateType, userList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'roomStreamUpdate',\n    (roomID, updateType, streamList) => {\n      zloginfo('[roomStreamUpdate callback]', roomID, updateType, streamList);\n      _onRoomStreamUpdate(roomID, updateType, streamList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'publisherQualityUpdate',\n    (streamID, quality) => {\n      if (_qualityUpdateLogCounter % 10 == 0) {\n        _qualityUpdateLogCounter = 0;\n        zloginfo('[publisherQualityUpdate callback]', streamID, quality);\n      }\n      _qualityUpdateLogCounter++;\n      if (streamID.split('_')[2] === 'main') {\n        _localCoreUser.publisherQuality = quality;\n        _coreUserMap[_localCoreUser.userID].publisherQuality = quality;\n        _notifyUserInfoUpdate(_coreUserMap[_localCoreUser.userID]);\n      }\n    }\n  );\n  // ZegoExpressEngine.instance().on(\n  //     'publisherStateUpdate',\n  //     (streamID, state, errorCode, extendedData) => {\n  //         zloginfo('publisherStateUpdate#################', streamID, state, errorCode)\n  //     },\n  // );\n  ZegoExpressEngine.instance().on(\n    'playerQualityUpdate',\n    (streamID, quality) => {\n      if (_qualityUpdateLogCounter % 10 == 0) {\n        // zloginfo('[playerQualityUpdate callback]', streamID, quality);\n      }\n      // TODO\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'remoteCameraStateUpdate',\n    (streamID, state) => {\n      zloginfo('[remoteCameraStateUpdate callback]', streamID, state);\n      // 0 for device is on\n      _onRemoteCameraStateUpdate(_getUserIDByStreamID(streamID), state == 0);\n    }\n  );\n  ZegoExpressEngine.instance().on('remoteMicStateUpdate', (streamID, state) => {\n    zloginfo('[remoteMicStateUpdate callback]', streamID, state);\n    // 0 for device is on\n    _onRemoteMicStateUpdate(_getUserIDByStreamID(streamID), state == 0);\n  });\n  ZegoExpressEngine.instance().on(\n    'playerStateUpdate',\n    (streamID, state, errorCode, extendedData) => {\n      zloginfo(\n        '[playerStateUpdate callback]',\n        streamID,\n        state,\n        errorCode,\n        extendedData\n      );\n    }\n  );\n  ZegoExpressEngine.instance().on('remoteSoundLevelUpdate', (soundLevels) => {\n    // {streamID, soundLavel} value from 0.0 to 100.0\n    // zloginfo('[remoteSoundLevelUpdate callback]', soundLevels);\n    Object.keys(soundLevels).forEach((streamID) => {\n      const userID = _getUserIDByStreamID(streamID);\n      if (userID in _coreUserMap) {\n        _coreUserMap[userID].soundLevel = soundLevels[streamID];\n        _notifySoundLevelUpdate(userID, soundLevels[streamID]);\n      }\n    });\n  });\n  ZegoExpressEngine.instance().on('capturedSoundLevelUpdate', (soundLevel) => {\n    if (\n      _localCoreUser.userID === '' ||\n      !(_localCoreUser.userID in _coreUserMap)\n    ) {\n      return;\n    }\n    _localCoreUser.soundLevel = soundLevel;\n    _coreUserMap[_localCoreUser.userID].soundLevel = soundLevel;\n    _notifySoundLevelUpdate(_localCoreUser.userID, soundLevel);\n    // zloginfo('capturedSoundLevelUpdate', soundLevel)\n  });\n  // https://doc-en-api.zego.im/ReactNative/enums/_zegoexpressdefines_.zegoroomstatechangedreason.html\n  ZegoExpressEngine.instance().on(\n    'roomStateChanged',\n    (roomID, reason, errorCode, extendedData) => {\n      zloginfo(\n        '[roomStateChanged callback]',\n        roomID,\n        reason,\n        errorCode,\n        extendedData\n      );\n      _onRoomStateChanged(roomID, reason, errorCode, extendedData);\n    }\n  );\n  ZegoExpressEngine.instance().on('audioRouteChange', (audioRoute) => {\n    zloginfo('[audioRouteChange callback]', audioRoute);\n    _onAudioRouteChange(audioRoute);\n  });\n  ZegoExpressEngine.instance().on(\n    'IMRecvBroadcastMessage',\n    (roomID, messageList) => {\n      _onInRoomMessageReceived(roomID, messageList);\n    }\n  );\n  ZegoExpressEngine.instance().on(\n    'roomTokenWillExpire',\n    (roomID, remainTimeInSecond) => {\n      _onRequireNewToken();\n    }\n  );\n  ZegoExpressEngine.instance().on('roomExtraInfoUpdate', (roomID, roomExtraInfoList) => {\n    _onRoomExtraInfoUpdate(roomID, roomExtraInfoList);\n  });\n  ZegoExpressEngine.instance().on('roomStreamExtraInfoUpdate', (roomID, streamList) => {\n    zloginfo('roomStreamExtraInfoUpdate', streamList)\n    streamList.forEach((stream) => {\n        try {\n            var extraInfo = JSON.parse(stream.extraInfo)\n            if ('isCameraOn' in extraInfo) {\n                _onRemoteCameraStateUpdate(stream.user.userID, extraInfo.isCameraOn)\n            }\n            if ('isMicrophoneOn' in extraInfo) {\n                _onRemoteMicStateUpdate(stream.user.userID, extraInfo.isMicrophoneOn)\n            }\n        } catch (error) {\n            zlogerror('roomStreamExtraInfoUpdate ERROR: ', error)\n        }\n    })\n  });\n  ZegoExpressEngine.instance().on('IMRecvCustomCommand', (roomID, fromUser, command) => {\n    zloginfo('IMRecvCustomCommand', roomID, fromUser, command);\n    _onIMCustomCommandReceived(roomID, fromUser, command);\n  });\n}\nfunction _unregisterEngineCallback() {\n  zloginfo('Unregister callback from ZegoExpressEngine...');\n  ZegoExpressEngine.instance().off('roomUserUpdate');\n  ZegoExpressEngine.instance().off('roomStreamUpdate');\n  ZegoExpressEngine.instance().off('publisherQualityUpdate');\n  ZegoExpressEngine.instance().off('playerQualityUpdate');\n  ZegoExpressEngine.instance().off('remoteCameraStateUpdate');\n  ZegoExpressEngine.instance().off('remoteMicStateUpdate');\n  ZegoExpressEngine.instance().off('playerStateUpdate');\n  ZegoExpressEngine.instance().off('remoteSoundLevelUpdate');\n  ZegoExpressEngine.instance().off('capturedSoundLevelUpdate');\n  ZegoExpressEngine.instance().off('roomStateChanged');\n  ZegoExpressEngine.instance().off('audioRouteChange');\n  ZegoExpressEngine.instance().off('IMRecvBroadcastMessage');\n  ZegoExpressEngine.instance().off('roomExtraInfoUpdate');\n  ZegoExpressEngine.instance().off('roomStreamExtraInfoUpdate');\n  ZegoExpressEngine.instance().off('IMRecvCustomCommand');\n}\nfunction _notifyUserCountOrPropertyChanged(type) {\n  const msg = [\n    '',\n    'user add',\n    'user delete',\n    'mic update',\n    'camera update',\n    'attributes update',\n  ];\n  const userList = Object.values(_coreUserMap)\n    .sort((user1, user2) => {\n      return user2.joinTime - user1.joinTime;\n    })\n    .map((user) => _createPublicUser(user));\n  zloginfo(`_notifyUserCountOrPropertyChanged ${msg[type]}`, userList);\n  Object.keys(_onUserCountOrPropertyChangedCallbackMap).forEach(\n    (callbackID) => {\n      if (_onUserCountOrPropertyChangedCallbackMap[callbackID]) {\n        _onUserCountOrPropertyChangedCallbackMap[callbackID](\n          JSON.parse(JSON.stringify(userList))\n        );\n      }\n    }\n  );\n}\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Stream Handling <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nfunction _getUserIDByStreamID(streamID) {\n  // StreamID format: roomid_userid_main\n  for (const userID in _coreUserMap) {\n    if (_coreUserMap[userID].streamID == streamID) {\n      return userID;\n    }\n  }\n  return '';\n}\nfunction _getPublishStreamID() {\n  return _currentRoomID + '_' + _localCoreUser.userID + '_main';\n}\nfunction _getStreamIDByUserID(userID) {\n  return _currentRoomID + '_' + userID + '_main';\n}\nfunction _tryStartPublishStream() {\n  if (_localCoreUser.isMicDeviceOn || _localCoreUser.isCameraDeviceOn) {\n    zloginfo(\n      '_tryStartPublishStream',\n      _localCoreUser.isMicDeviceOn,\n      _localCoreUser.isCameraDeviceOn,\n      _localCoreUser.streamID\n    );\n    if (!_localCoreUser.streamID) {\n      return;\n    }\n    ZegoExpressEngine.instance()\n      .startPublishingStream(_localCoreUser.streamID)\n      .then(() => {\n        zloginfo('Notify local user audioVideoAvailable start', _localCoreUser.streamID + '', JSON.parse(JSON.stringify(_streamCoreUserMap)));\n        // if (_localCoreUser.streamID in _streamCoreUserMap) {\n          _streamCoreUserMap[_localCoreUser.streamID] = _localCoreUser;\n\n          zloginfo('Notify local user audioVideoAvailable end', _localCoreUser);\n          Object.keys(_onAudioVideoAvailableCallbackMap).forEach(\n            (callbackID) => {\n              if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                _onAudioVideoAvailableCallbackMap[callbackID]([_localCoreUser]);\n              }\n            }\n          );\n        // }\n      });\n    zloginfo('ZegoExpressEngine startPreview:', _localCoreUser);\n    if (_localCoreUser.viewID > 0) {\n      ZegoExpressEngine.instance()\n        .startPreview({\n          reactTag: _localCoreUser.viewID,\n          viewMode: _localCoreUser.fillMode,\n          backgroundColor: 0,\n        })\n        .catch((error) => {\n          zlogerror(error);\n        });\n    }\n  }\n}\nfunction _tryStopPublishStream(force = false) {\n  if (!_localCoreUser.isMicDeviceOn && !_localCoreUser.isCameraDeviceOn) {\n    zloginfo('stopPublishStream');\n    ZegoExpressEngine.instance().stopPublishingStream();\n    ZegoExpressEngine.instance().stopPreview();\n    if (_localCoreUser.streamID in _streamCoreUserMap) {\n      delete _streamCoreUserMap[_localCoreUser.streamID];\n\n      Object.keys(_onAudioVideoUnavailableCallbackMap).forEach((callbackID) => {\n        if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n          _onAudioVideoUnavailableCallbackMap[callbackID]([_localCoreUser]);\n        }\n      });\n    }\n  }\n}\nfunction _tryStartPlayStream(userID) {\n  if (userID in _coreUserMap) {\n    const user = _coreUserMap[userID];\n    zloginfo(\n      '########_tryStartPlayStream##############: ',\n      user,\n      user.fillMode,\n      _audioVideoResourceMode,\n    );\n    if (user.streamID !== '') {\n      if (user.viewID > 0) {\n        ZegoExpressEngine.instance().startPlayingStream(user.streamID, {\n          reactTag: user.viewID,\n          viewMode: user.fillMode,\n          backgroundColor: 0,\n        }, {\n          resourceMode: _audioVideoResourceMode,\n        });\n      } else {\n        ZegoExpressEngine.instance().startPlayingStream(user.streamID, undefined, {\n          resourceMode: _audioVideoResourceMode,\n        });\n      }\n    }\n  }\n}\nfunction _tryStopPlayStream(userID, force = false) {\n  if (userID in _coreUserMap) {\n    const user = _coreUserMap[userID];\n    if (force || (!user.isMicDeviceOn && !user.isCameraDeviceOn)) {\n      ZegoExpressEngine.instance().stopPlayingStream(user.streamID);\n    }\n  }\n}\nfunction _notifyUserInfoUpdate(userInfo) {\n  Object.keys(_onUserInfoUpdateCallbackMap).forEach((callbackID) => {\n    if (_onUserInfoUpdateCallbackMap[callbackID]) {\n      _onUserInfoUpdateCallbackMap[callbackID](userInfo);\n    }\n  });\n}\nfunction _notifySoundLevelUpdate(userID, soundLevel) {\n  Object.keys(_onSoundLevelUpdateCallbackMap).forEach((callbackID) => {\n    if (_onSoundLevelUpdateCallbackMap[callbackID]) {\n      _onSoundLevelUpdateCallbackMap[callbackID](userID, soundLevel);\n    }\n  });\n}\nfunction _notifyRoomPropertyUpdate(key, oldValue, value, type) {\n  Object.keys(_onRoomPropertyUpdatedCallbackMap).forEach((callbackID) => {\n    if (_onRoomPropertyUpdatedCallbackMap[callbackID]) {\n      _onRoomPropertyUpdatedCallbackMap[callbackID](key, oldValue, value, type);\n    }\n  });\n}\nfunction _notifyRoomPropertiesFullUpdate(keys, oldRoomProperties, roomProperties, type) {\n  Object.keys(_onRoomPropertiesFullUpdatedCallbackMap).forEach((callbackID) => {\n    if (_onRoomPropertiesFullUpdatedCallbackMap[callbackID]) {\n      _onRoomPropertiesFullUpdatedCallbackMap[callbackID](keys, oldRoomProperties, roomProperties, type);\n    }\n  });\n}\nfunction _notifyMeRemovedFromRoom() {\n  Object.keys(_onMeRemovedFromRoomCallbackMap).forEach((callbackID) => {\n    if (_onMeRemovedFromRoomCallbackMap[callbackID]) {\n      _onMeRemovedFromRoomCallbackMap[callbackID]();\n    }\n  });\n}\nconst _isEngineCreated = () => {\n  try {\n    return ZegoExpressEngine.instance() != undefined;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport default {\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Internal <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  isRoomConnected() {\n    return _isRoomConnected;\n  },\n  setAudioVideoResourceMode(audioVideoResourceMode) {\n    zloginfo('setAudioVideoResourceMode', audioVideoResourceMode);\n    _audioVideoResourceMode = audioVideoResourceMode || ZegoAudioVideoResourceMode.Default;\n  },\n  updateRenderingProperty(userID, viewID, fillMode) {\n    zloginfo(\n      'updateRenderingProperty: ',\n      userID,\n      viewID,\n      fillMode,\n      '<<<<<<<<<<<<<<<<<<<<<<<<<<'\n    );\n    if (userID === undefined) {\n      zlogwarning(\n        'updateRenderingProperty: ignore undifine useid. Use empty string for local user.'\n      );\n      return;\n    }\n    if (userID === '') {\n      userID = _localCoreUser.userID;\n    }\n    if (userID in _coreUserMap) {\n      _coreUserMap[userID].viewID = viewID;\n      _coreUserMap[userID].fillMode = fillMode;\n      _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n      if (_localCoreUser.userID == userID) {\n        _localCoreUser.viewID = viewID;\n        _localCoreUser.fillMode = fillMode;\n        if (viewID > 0) {\n          _tryStartPublishStream();\n        } else {\n          _tryStopPublishStream();\n        }\n      } else {\n        // Check if stream is ready to play for remote user\n        if (viewID > 0) {\n          _tryStartPlayStream(userID);\n        }\n      }\n    }\n  },\n  onUserInfoUpdate(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserInfoUpdateCallbackMap) {\n        zloginfo(\n          '[onUserInfoUpdate] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserInfoUpdateCallbackMap[callbackID];\n      }\n    } else {\n      _onUserInfoUpdateCallbackMap[callbackID] = callback;\n    }\n  },\n  onSoundLevelUpdate(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onSoundLevelUpdateCallbackMap) {\n        zloginfo(\n          '[onSoundLevelUpdate] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onSoundLevelUpdateCallbackMap[callbackID];\n      }\n    } else {\n      _onSoundLevelUpdateCallbackMap[callbackID] = callback;\n    }\n  },\n  onSDKConnected(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onSDKConnectedCallbackMap) {\n        zloginfo(\n          '[onSDKConnected] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onSDKConnectedCallbackMap[callbackID];\n      }\n    } else {\n      _onSDKConnectedCallbackMap[callbackID] = callback;\n    }\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SDK <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  connectSDK(appID, appSign, userInfo) {\n    // Solve the problem of repeated initialization\n    if (_isEngineCreated()) {\n      zloginfo('Create ZegoExpressEngine succeed already!');\n\n      \n      _unregisterEngineCallback();\n      _registerEngineCallback();\n\n      Object.keys(_onSDKConnectedCallbackMap).forEach((callbackID) => {\n        // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n        if (_onSDKConnectedCallbackMap[callbackID]) {\n          _onSDKConnectedCallbackMap[callbackID]();\n        }\n      });\n\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      // set advancedConfig to monitor remote user's device changed\n      ZegoExpressEngine.setEngineConfig({\n        advancedConfig: {\n          notify_remote_device_unknown_status: 'true',\n          notify_remote_device_init_status: 'true',\n        },\n      });\n      const engineProfile = {\n        appID: appID,\n        appSign: appSign,\n        scenario: 0,\n      };\n      ZegoExpressEngine.createEngineWithProfile(engineProfile)\n        .then((engine) => {\n          zloginfo('Create ZegoExpressEngine succeed!');\n          _appInfo.appID = appID;\n          _appInfo.appSign = appSign;\n          _unregisterEngineCallback();\n          _registerEngineCallback();\n\n          _setLocalUserInfo(userInfo);\n\n          Object.keys(_onSDKConnectedCallbackMap).forEach((callbackID) => {\n            // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n            if (_onSDKConnectedCallbackMap[callbackID]) {\n              _onSDKConnectedCallbackMap[callbackID]();\n            }\n          });\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Create ZegoExpressEngine Failed: ', error);\n          reject(error);\n        });\n    });\n  },\n  disconnectSDK() {\n    return new Promise((resolve, reject) => {\n      if (ZegoExpressEngine.instance()) {\n        ZegoExpressEngine.destroyEngine()\n          .then(() => {\n            zloginfo('Destroy ZegoExpressEngine finished!');\n            resolve();\n          })\n          .catch((error) => {\n            zlogerror('Destroy ZegoExpressEngine failed!', error);\n            reject(error);\n          })\n          .finally(() => {\n            _resetData();\n          });\n      } else {\n        resolve();\n      }\n    });\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Audio Video <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  useFrontFacingCamera(isFrontFacing) {\n    zloginfo('Use front facing camera: ', isFrontFacing);\n    _usingFrontFacingCamera = isFrontFacing;\n    return ZegoExpressEngine.instance().useFrontCamera(isFrontFacing, 0);\n  },\n  isUsingFrontFacingCamera() {\n    return _usingFrontFacingCamera;\n  },\n  isMicDeviceOn(userID) {\n    if (!userID) {\n      return _localCoreUser.isMicDeviceOn;\n    } else if (userID in _coreUserMap) {\n      return _coreUserMap[userID].isMicDeviceOn;\n    } else {\n      zlogwarning(\n        'Can not check mic device is on for user[',\n        userID,\n        '], because no record!'\n      );\n      return true;\n    }\n  },\n  isCameraDeviceOn(userID) {\n    if (!userID) {\n      return _localCoreUser.isCameraDeviceOn;\n    } else if (userID in _coreUserMap) {\n      return _coreUserMap[userID].isCameraDeviceOn;\n    } else {\n      zlogwarning(\n        'No record for user: ',\n        userID,\n        '. Can not check camera device is on.'\n      );\n      return true;\n    }\n  },\n  enableSpeaker(enable) {\n    // TODO\n    return new Promise((resolve, reject) => {\n      if (!_isRoomConnected) {\n        zlogerror('You are not connect to any room.');\n        reject();\n      } else {\n        ZegoExpressEngine.instance().muteSpeaker(!enable);\n        resolve();\n      }\n    });\n  },\n  audioOutputDeviceType() {\n    return _audioOutputType;\n  },\n  turnMicDeviceOn(userID, on) {\n    return _turnMicDeviceOn(userID, on);\n  },\n  turnCameraDeviceOn(userID, on) {\n    return _turnCameraDeviceOn(userID, on);\n  },\n  onMicDeviceOn(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMicDeviceOnCallbackMap) {\n        zloginfo(\n          '[onMicDeviceOn] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMicDeviceOnCallbackMap[callbackID];\n      }\n    } else {\n      _onMicDeviceOnCallbackMap[callbackID] = callback;\n    }\n  },\n  onCameraDeviceOn(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onCameraDeviceOnCallbackMap) {\n        zloginfo(\n          '[onCameraDeviceOn] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onCameraDeviceOnCallbackMap[callbackID];\n      }\n    } else {\n      _onCameraDeviceOnCallbackMap[callbackID] = callback;\n    }\n  },\n  setAudioOutputToSpeaker(isSpeaker) {\n    ZegoExpressEngine.instance().setAudioRouteToSpeaker(isSpeaker);\n  },\n  onAudioOutputDeviceTypeChange(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioOutputDeviceTypeChangeCallbackMap) {\n        zloginfo(\n          '[onAudioOutputDeviceTypeChange] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioOutputDeviceTypeChangeCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioOutputDeviceTypeChangeCallbackMap[callbackID] = callback;\n    }\n  },\n  setAudioConfig(config) {\n    // TODO\n  },\n  setVideoConfig(config) {\n    // TODO\n  },\n  onAudioVideoAvailable(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoAvailableCallbackMap) {\n        zloginfo(\n          '[onAudioVideoAvailable] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoAvailableCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoAvailableCallbackMap[callbackID] = callback;\n    }\n  },\n  onAudioVideoUnavailable(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoUnavailableCallbackMap) {\n        zloginfo(\n          '[onAudioVideoUnavailable] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoUnavailableCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoUnavailableCallbackMap[callbackID] = callback;\n    }\n  },\n  startPlayingAllAudioVideo() {\n    ZegoExpressEngine.instance().muteAllPlayStreamAudio(false);\n    ZegoExpressEngine.instance().muteAllPlayStreamVideo(false);\n  },\n  stopPlayingAllAudioVideo() {\n    ZegoExpressEngine.instance().muteAllPlayStreamAudio(true);\n    ZegoExpressEngine.instance().muteAllPlayStreamVideo(true);\n  },\n  onTurnOnYourCameraRequest(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onTurnOnYourCameraRequestCallbackMap) {\n        zloginfo(\n          '[onTurnOnYourCameraRequest] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onTurnOnYourCameraRequestCallbackMap[callbackID];\n      }\n    } else {\n      _onTurnOnYourCameraRequestCallbackMap[callbackID] = callback;\n    }\n  },\n  onTurnOnYourMicrophoneRequest(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onTurnOnYourMicrophoneRequestCallbackMap) {\n        zloginfo(\n          '[onTurnOnYourMicrophoneRequest] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onTurnOnYourMicrophoneRequestCallbackMap[callbackID];\n      }\n    } else {\n      _onTurnOnYourMicrophoneRequestCallbackMap[callbackID] = callback;\n    }\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  joinRoom(roomID, token, markAsLargeRoom = false) {\n    // Solve the problem of repeated join\n    if (_isRoomConnected && _currentRoomID === roomID) {\n      zloginfo('Join room success already');\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const user = {\n        userID: _localCoreUser.userID,\n        userName: _localCoreUser.userName,\n      };\n      const config = { isUserStatusNotify: true };\n      token && (config.token = token);\n      _currentRoomID = roomID;\n      ZegoExpressEngine.instance()\n        .loginRoom(roomID, user, config)\n        .then(() => {\n          zloginfo('Join room success.', user);\n          _roomMemberCount = 1\n          _markAsLargeRoom = markAsLargeRoom;\n          ZegoExpressEngine.instance().startSoundLevelMonitor();\n\n          _localCoreUser.streamID = _getPublishStreamID();\n          _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n          _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n          _tryStartPublishStream()\n\n          resolve();\n        })\n        .catch((error) => {\n          zlogerror('Join room falied: ', error);\n          _currentRoomID = '';\n          reject(error);\n        });\n    });\n  },\n  leaveRoom() {\n    return _leaveRoom();\n  },\n  onRoomStateChanged(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomStateChangedCallbackMap) {\n        zloginfo(\n          '[onRoomStateChanged] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomStateChangedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomStateChangedCallbackMap[callbackID] = callback;\n    }\n  },\n  onRequireNewToken(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRequireNewTokenCallbackMap) {\n        zloginfo(\n          '[onRequireNewToken] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRequireNewTokenCallbackMap[callbackID];\n      }\n    } else {\n      _onRequireNewTokenCallbackMap[callbackID] = callback;\n    }\n  },\n  setRoomProperty(key, value) {\n    if (!_isRoomConnected) {\n      zlogerror('You need to join the room before using this interface!');\n      return;\n    }\n    if (_roomProperties[key] === value) {\n      return;\n    }\n    const oldValue = _roomProperties[key];\n    const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n    _roomProperties[key] = value;\n    const extraInfo = JSON.stringify(_roomProperties);\n    zloginfo('[updateRoomProperties]Set start', extraInfo);\n    return new Promise((resolve, reject) => {\n      ZegoExpressEngine.instance().setRoomExtraInfo(_currentRoomID, 'extra_info', extraInfo).then(({ errorCode }) => {\n        if (errorCode === 0) {\n          zloginfo('[updateRoomProperties]Set success');\n          resolve();\n          // Notify\n          _notifyRoomPropertyUpdate(key, oldValue, value, ZegoRoomPropertyUpdateType.set);\n          _notifyRoomPropertiesFullUpdate([key], oldRoomProperties, JSON.parse(extraInfo), ZegoRoomPropertyUpdateType.set);\n        } else {\n          // Restore\n          _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n          zlogwarning('[setRoomProperty]Set failed, errorCode: ', errorCode);\n          reject({ code: errorCode });\n        }\n      }).catch((error) => {\n        // Restore\n        _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n        zlogerror('[setRoomProperty]Set error', error);\n        reject(error);\n      });\n    });\n  },\n  updateRoomProperties(newRoomProperties) {\n    if (!_isRoomConnected) {\n      zlogerror('You need to join the room before using this interface!');\n      return Promise.reject();\n    }\n    const updateKeys = [];\n    const oldRoomProperties = JSON.parse(JSON.stringify(_roomProperties));\n    Object.keys(newRoomProperties).forEach((key) => {\n      if (oldRoomProperties[key] !== newRoomProperties[key]) {\n        updateKeys.push(key);\n        _roomProperties[key] = newRoomProperties[key];\n      }\n    })\n    const extraInfo = JSON.stringify(_roomProperties);\n    zloginfo('[updateRoomProperties]Update start', extraInfo);\n    return new Promise((resolve, reject) => {\n      ZegoExpressEngine.instance().setRoomExtraInfo(_currentRoomID, 'extra_info', extraInfo).then(({ errorCode }) => {\n        if (errorCode === 0) {\n          zloginfo('[updateRoomProperties]Update success');\n          resolve();\n          // Notify\n          updateKeys.forEach((updateKey) => {\n            const oldValue = oldRoomProperties[updateKey];\n            const value = newRoomProperties[updateKey];\n            _notifyRoomPropertyUpdate(updateKey, oldValue, value, ZegoRoomPropertyUpdateType.update);\n          })\n          updateKeys.length && _notifyRoomPropertiesFullUpdate(updateKeys, oldRoomProperties, JSON.parse(extraInfo), ZegoRoomPropertyUpdateType.update);\n        } else {\n          // Restore\n          _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n          zlogwarning('[updateRoomProperties]Update failed, errorCode: ', errorCode);\n          reject({ code: errorCode });\n        }\n      }).catch((error) => {\n        // Restore\n        _roomProperties = JSON.parse(JSON.stringify(oldRoomProperties));\n        zlogerror('[updateRoomProperties]Update error', error);\n        reject(error);\n      });\n    });\n  },\n  getRoomProperties() {\n    return _roomProperties;\n  },\n  onRoomPropertyUpdated(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomPropertyUpdatedCallbackMap) {\n        zloginfo(\n          '[onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomPropertyUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomPropertyUpdatedCallbackMap[callbackID] = callback;\n    }\n  },\n  onRoomPropertiesFullUpdated(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onRoomPropertiesFullUpdatedCallbackMap) {\n        zloginfo(\n          '[onRoomPropertiesFullUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onRoomPropertiesFullUpdatedCallbackMap[callbackID];\n      }\n    } else {\n      _onRoomPropertiesFullUpdatedCallbackMap[callbackID] = callback;\n    }\n  },\n  sendInRoomCommand(command, toUserIDs = []) {\n    const toUserList = toUserIDs.map((userID) => {\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      return {\n        userID,\n        userName,\n      };\n    });\n    return _sendInRoomCommand(command, toUserList);\n  },\n  onInRoomCommandReceived(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomCommandReceivedCallbackMap) {\n        zloginfo(\n          '[onInRoomCommandReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomCommandReceivedCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomCommandReceivedCallbackMap[callbackID] = callback;\n    }\n  },\n  onMeRemovedFromRoom(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMeRemovedFromRoomCallbackMap) {\n        zloginfo(\n          '[onMeRemovedFromRoom] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMeRemovedFromRoomCallbackMap[callbackID];\n      }\n    } else {\n      _onMeRemovedFromRoomCallbackMap[callbackID] = callback;\n    }\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> User <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  connectUser(userID, userName) {\n    _setLocalUserInfo({ userID: userID, userName: userName });\n    // TODO ZIM login\n  },\n  disconnectUser() {\n    delete _coreUserMap[_localCoreUser.userID];\n    _localCoreUser = _createCoreUser('', '', '', {});\n    // TODO ZIM logout\n  },\n  getLocalUserInfo() {\n    return _localCoreUser;\n  },\n  getUser(userID) {\n    return _coreUserMap[userID];\n  },\n  getAllUsers() {\n    const users = Object.values(_coreUserMap);\n    users.sort((a, b) => {\n      return a.joinTime > b.joinTime;\n    });\n    var publicUsers = [];\n    users.forEach((user) => {\n      publicUsers.push(_createPublicUser(user));\n    });\n    return publicUsers;\n  },\n  onUserJoin(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserJoinCallbackMap) {\n        zloginfo(\n          '[onUserJoin] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserJoinCallbackMap[callbackID];\n      }\n    } else {\n      _onUserJoinCallbackMap[callbackID] = callback;\n    }\n  },\n  onUserLeave(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserLeaveCallbackMap) {\n        zloginfo(\n          '[onUserLeave] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserLeaveCallbackMap[callbackID];\n      }\n    } else {\n      _onUserLeaveCallbackMap[callbackID] = callback;\n    }\n  },\n  onOnlySelfInRoom(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onOnlySelfInRoomCallbackMap) {\n        zloginfo(\n          '[onOnlySelfInRoom] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onOnlySelfInRoomCallbackMap[callbackID];\n      }\n    } else {\n      _onOnlySelfInRoomCallbackMap[callbackID] = callback;\n    }\n  },\n  onUserCountOrPropertyChanged(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onUserCountOrPropertyChangedCallbackMap) {\n        zloginfo(\n          '[onUserCountOrPropertyChanged] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onUserCountOrPropertyChangedCallbackMap[callbackID];\n      }\n    } else {\n      _onUserCountOrPropertyChangedCallbackMap[callbackID] = callback;\n    }\n  },\n  removeUserFromRoom(userIDs = []) {\n    const command = JSON.stringify({ zego_remove_user: userIDs });\n    const toUserList = (_isLargeRoom || _markAsLargeRoom) ? [] : userIDs.map((userID) => {\n      const userInfo = _coreUserMap[userID];\n      const userName = userInfo ? (userInfo.userName || '') : '';\n      return {\n        userID,\n        userName,\n      };\n    });\n    return _sendInRoomCommand(command, toUserList);\n  },\n\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Message <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  getInRoomMessages() {\n    return _inRoomMessageList;\n  },\n  sendInRoomMessage(message) {\n    return new Promise((resolve, reject) => {\n      ZegoExpressEngine.instance()\n        .sendBroadcastMessage(_currentRoomID, message)\n        .then((result) => {\n          zloginfo('SendInRoomMessage finished.', result);\n          const { errorCode, messageID } = result;\n          if (errorCode > 0) {\n            reject(errorCode);\n          } else {\n            const inRoomMessage = {\n              message: message,\n              messageID: messageID,\n              sendTime: Date.now(),\n              sender: _createPublicUser(_localCoreUser),\n            };\n            _inRoomMessageList.push(inRoomMessage);\n\n            Object.keys(_onInRoomMessageSentCallbackMap).forEach(\n              (callbackID) => {\n                // callback may remove from map during room state chaging\n                if (callbackID in _onInRoomMessageSentCallbackMap) {\n                  if (_onInRoomMessageSentCallbackMap[callbackID]) {\n                    _onInRoomMessageSentCallbackMap[callbackID](\n                      errorCode,\n                      messageID\n                    );\n                  }\n                }\n              }\n            );\n\n            resolve(result);\n          }\n        })\n        .catch((error) => {\n          zlogerror('SendInRoomMessage falied: ', error);\n          reject(error);\n        });\n    });\n  },\n  onInRoomMessageReceived(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n        zloginfo(\n          '[onInRoomMessageReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  },\n  onInRoomMessageSent(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onInRoomMessageSentCallbackMap) {\n        zloginfo(\n          '[onInRoomMessageSent] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onInRoomMessageSentCallbackMap[callbackID];\n      }\n    } else {\n      _onInRoomMessageSentCallbackMap[callbackID] = callback;\n    }\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Live audio room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  notifyUserCountOrPropertyChanged(type) {\n    _notifyUserCountOrPropertyChanged(type);\n  },\n  notifyUserInfoUpdate(userID) {\n    _notifyUserInfoUpdate(_coreUserMap[userID]);\n  },\n  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Force update component <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n  forceSortMemberList() {\n    zloginfo('[forceSortMemberList callback]');\n    const userList = Object.values(_coreUserMap)\n      .sort((user1, user2) => {\n        return user2.joinTime - user1.joinTime;\n      })\n      .map((user) => _createPublicUser(user));\n    Object.keys(_onMemberListForceSortCallbackMap).forEach((callbackID) => {\n      if (_onMemberListForceSortCallbackMap[callbackID]) {\n        _onMemberListForceSortCallbackMap[callbackID](userList);\n      }\n    });\n  },\n  onMemberListForceSort(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onMemberListForceSortCallbackMap) {\n        zloginfo(\n          '[onMemberListForceSort] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onMemberListForceSortCallbackMap[callbackID];\n      }\n    } else {\n      _onMemberListForceSortCallbackMap[callbackID] = callback;\n    }\n  },\n  forceSortAudioVideoList() {\n    zloginfo('[forceSortAudioVideoList callback]');\n    Object.keys(_onAudioVideoListForceSortCallbackMap).forEach((callbackID) => {\n      if (_onAudioVideoListForceSortCallbackMap[callbackID]) {\n        _onAudioVideoListForceSortCallbackMap[callbackID]();\n      }\n    });\n  },\n  onAudioVideoListForceSort(callbackID, callback) {\n    if (typeof callback !== 'function') {\n      if (callbackID in _onAudioVideoListForceSortCallbackMap) {\n        zloginfo(\n          '[onAudioVideoListForceSort] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete _onAudioVideoListForceSortCallbackMap[callbackID];\n      }\n    } else {\n      _onAudioVideoListForceSortCallbackMap[callbackID] = callback;\n    }\n  },\n};\n"],"mappings":"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"}