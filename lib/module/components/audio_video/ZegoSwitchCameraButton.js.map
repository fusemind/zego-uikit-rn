{"version":3,"names":["React","useState","useEffect","Image","TouchableOpacity","View","ZegoUIKitInternal","ZegoSwitchCameraButton","props","iconFrontFacingCamera","iconBackFacingCamera","useFrontFacingCamera","onPress","width","height","isFront","setIsFront","isUsingFrontFacingCamera","getImageSourceByPath","pathFront","require","pathBack","onButtonPress","callbackID","String","Math","floor","random","onSDKConnected"],"sources":["ZegoSwitchCameraButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport ZegoUIKitInternal from \"../internal/ZegoUIKitInternal\";\n\nexport default function ZegoSwitchCameraButton(props) {\n    // TODO useFrontFacingCamera may cause problems when create a lot of times during connected\n    const { iconFrontFacingCamera, iconBackFacingCamera, useFrontFacingCamera = true, onPress, width = 48, height = 48 } = props;\n    const [isFront, setIsFront] = useState(ZegoUIKitInternal.isUsingFrontFacingCamera());\n    const getImageSourceByPath = () => {\n        const pathFront = iconFrontFacingCamera ? iconFrontFacingCamera : require(\"../internal/resources/white_button_flip_camera.png\");\n        const pathBack = iconBackFacingCamera ? iconFrontFacingCamera : require(\"../internal/resources/white_button_flip_camera.png\");\n        return isFront ? pathFront : pathBack\n    }\n\n    const onButtonPress = () => {\n        ZegoUIKitInternal.useFrontFacingCamera(!isFront);\n        setIsFront(!isFront);\n        if (typeof onPress == 'function') {\n            onPress();\n        }\n    }\n\n    useEffect(() => {\n        const callbackID = 'ZegoSwitchCameraButton' + String(Math.floor(Math.random() * 10000));\n        ZegoUIKitInternal.onSDKConnected(callbackID, () => {\n            ZegoUIKitInternal.useFrontFacingCamera(useFrontFacingCamera);\n            setIsFront(useFrontFacingCamera);\n        });\n        return () => {\n            ZegoUIKitInternal.onSDKConnected(callbackID);\n        }\n    }, []);\n\n    return (<TouchableOpacity\n        style={{ width: width, height: height }}\n        onPress={onButtonPress}>\n        <Image resizeMode='contain' source={getImageSourceByPath()} style={{ width: \"100%\", height: \"100%\" }} />\n    </TouchableOpacity>)\n}"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,gBAAhB,EAAkCC,IAAlC,QAA8C,cAA9C;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;EAClD;EACA,MAAM;IAAEC,qBAAF;IAAyBC,oBAAzB;IAA+CC,oBAAoB,GAAG,IAAtE;IAA4EC,OAA5E;IAAqFC,KAAK,GAAG,EAA7F;IAAiGC,MAAM,GAAG;EAA1G,IAAiHN,KAAvH;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACK,iBAAiB,CAACW,wBAAlB,EAAD,CAAtC;;EACA,MAAMC,oBAAoB,GAAG,MAAM;IAC/B,MAAMC,SAAS,GAAGV,qBAAqB,GAAGA,qBAAH,GAA2BW,OAAO,CAAC,oDAAD,CAAzE;IACA,MAAMC,QAAQ,GAAGX,oBAAoB,GAAGD,qBAAH,GAA2BW,OAAO,CAAC,oDAAD,CAAvE;IACA,OAAOL,OAAO,GAAGI,SAAH,GAAeE,QAA7B;EACH,CAJD;;EAMA,MAAMC,aAAa,GAAG,MAAM;IACxBhB,iBAAiB,CAACK,oBAAlB,CAAuC,CAACI,OAAxC;IACAC,UAAU,CAAC,CAACD,OAAF,CAAV;;IACA,IAAI,OAAOH,OAAP,IAAkB,UAAtB,EAAkC;MAC9BA,OAAO;IACV;EACJ,CAND;;EAQAV,SAAS,CAAC,MAAM;IACZ,MAAMqB,UAAU,GAAG,2BAA2BC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAD,CAApD;IACArB,iBAAiB,CAACsB,cAAlB,CAAiCL,UAAjC,EAA6C,MAAM;MAC/CjB,iBAAiB,CAACK,oBAAlB,CAAuCA,oBAAvC;MACAK,UAAU,CAACL,oBAAD,CAAV;IACH,CAHD;IAIA,OAAO,MAAM;MACTL,iBAAiB,CAACsB,cAAlB,CAAiCL,UAAjC;IACH,CAFD;EAGH,CATQ,EASN,EATM,CAAT;EAWA,oBAAQ,oBAAC,gBAAD;IACJ,KAAK,EAAE;MAAEV,KAAK,EAAEA,KAAT;MAAgBC,MAAM,EAAEA;IAAxB,CADH;IAEJ,OAAO,EAAEQ;EAFL,gBAGJ,oBAAC,KAAD;IAAO,UAAU,EAAC,SAAlB;IAA4B,MAAM,EAAEJ,oBAAoB,EAAxD;IAA4D,KAAK,EAAE;MAAEL,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE;IAAzB;EAAnE,EAHI,CAAR;AAKH"}